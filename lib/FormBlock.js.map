{"version":3,"sources":["../src/FormBlock.js"],"names":["FormBlock","state","getDerivedStateFromProps","props","className","style","children","formConfig","nextProps","prevState","parentConfig","schema","type","Error","FormConfig","mergeOptions","options","setFormContext","basePath","formikProps","equals","React","Component","propTypes","PropTypes","string","object","FORM_CONFIG_PROP_TYPES"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;;;;;;;;;AAGA;;;;IAIMA,S;;;;;;;;;;;;;;gMAsCFC,K,GAAQD,UAAUE,wBAAV,CAAmC,MAAKC,KAAxC,C;;;;;iCAqBR;AAAA,yBAC2C,KAAKA,KADhD;AAAA,gBACYC,SADZ,UACYA,SADZ;AAAA,gBACuBC,KADvB,UACuBA,KADvB;AAAA,gBAC8BC,QAD9B,UAC8BA,QAD9B;;;AAGI,mBACI;AAAC,oCAAD,CAAY,QAAZ;AAAA,kBAAqB,OAAQ,KAAKL,KAAL,CAAWM,UAAxC;AACI;AAAA;AAAA,sBAAK,WAAY,0BAAG,WAAH,EAAgBH,SAAhB,CAAjB,EAA8C,OAAQC,KAAtD;AAEQC;AAFR;AADJ,aADJ;AASH;;;iDArE+BE,S,EAAWC,S,EAC3C;AAAA,gBACwBC,YADxB,GACyCF,SADzC,CACYD,UADZ;;;AAGI,gBAAI,CAACG,YAAD,IAAiB,CAACA,aAAaC,MAA/B,IAAyC,CAACD,aAAaE,IAA3D,EACA;AACI,sBAAM,IAAIC,KAAJ,CAAU,mDAAV,CAAN;AACH;;AAED,gBAAMN,aAAa,IAAIO,oBAAJ,CACfA,qBAAWC,YAAX,CACIL,aAAaM,OADjB,EAEIR,SAFJ,CADe,EAKfE,aAAaC,MALE,CAAnB;;AAQAJ,uBAAWU,cAAX,CACIP,aAAaE,IADjB,EAEIJ,UAAUU,QAAV,IAAsBR,aAAaQ,QAFvC,EAGIR,aAAaS,WAHjB;;AAMA;AACA,gBAAIV,aAAaA,UAAUF,UAAV,CAAqBa,MAArB,CAA4Bb,UAA5B,CAAjB,EACA;AACI;AACA,uBAAO,IAAP;AACH;;AAED;AACA,mBAAO;AACHA;AADG,aAAP;AAGH;;;;EApCmBc,gBAAMC,S;;AAAxBtB,S,CAwCKuB,S;AACH;;;AAGAnB,eAAWoB,oBAAUC,M;;AAErB;;;;AAIAP,cAAUM,oBAAUC,M;AACpB;;;AAGApB,WAAOmB,oBAAUE;GACbC,6B;kBAmBG,8BAAe3B,SAAf,C","file":"FormBlock.js","sourcesContent":["import React from \"react\"\nimport cx from \"classnames\"\nimport PropTypes from \"prop-types\"\n\nimport withFormConfig from \"./withFormConfig\";\nimport FormConfig from \"./FormConfig\"\nimport FORM_CONFIG_PROP_TYPES from \"./FormConfigPropTypes\"\n\n\n/**\n * A form block defining a changed form configuration for the fields\n * contained within.\n */\nclass FormBlock extends React.Component {\n\n    static getDerivedStateFromProps(nextProps, prevState)\n    {\n        const { formConfig: parentConfig } = nextProps;\n\n        if (!parentConfig || !parentConfig.schema || !parentConfig.type)\n        {\n            throw new Error(\"<FormBlock/> should only be used inside a <Form/>\");\n        }\n\n        const formConfig = new FormConfig(\n            FormConfig.mergeOptions(\n                parentConfig.options,\n                nextProps\n            ),\n            parentConfig.schema\n        );\n        \n        formConfig.setFormContext(\n            parentConfig.type,\n            nextProps.basePath || parentConfig.basePath,\n            parentConfig.formikProps\n        );\n\n        // did the form config actually change since last time?\n        if (prevState && prevState.formConfig.equals(formConfig))\n        {\n            // no -> no update\n            return null;\n        }\n\n        // update form config in local state\n        return {\n            formConfig\n        };\n    }\n\n    state = FormBlock.getDerivedStateFromProps(this.props);\n\n    static propTypes = {\n        /**\n         * Additional HTML class for this form block\n         */\n        className: PropTypes.string,\n\n        /**\n         * Optional property to define a common base path for the fields contained within. (e.g. basePath=\"foos.12\" would prefix all fields' name\n         * attributes so that &lt;Field name=\"name\"/&gt; would end up being &lt;Field name=\"foos.12.name\"/&gt;\n         */\n        basePath: PropTypes.string,\n        /**\n         * Additional CSS styles for this form block.\n         */\n        style: PropTypes.object,\n        ... FORM_CONFIG_PROP_TYPES\n    };\n\n    render()\n    {\n        const { className, style, children } = this.props;\n\n        return (\n            <FormConfig.Provider value={ this.state.formConfig }>\n                <div className={ cx(\"dql-block\", className) } style={ style }>\n                    {\n                        children\n                    }\n                </div>\n            </FormConfig.Provider>\n        );\n    };\n}\n\nexport default withFormConfig(FormBlock)\n"]}