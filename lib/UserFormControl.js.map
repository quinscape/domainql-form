{"version":3,"sources":["../src/UserFormControl.js"],"names":["withUserControl","Component","state","control","horizontal","labelColumnClass","wrapperColumnClass","mode","FieldMode","NORMAL","currency","currencyAddonRight","changeControl","name","value","setState","props","React","UserFormControl","ev","target","DISABLED","READ_ONLY"],"mappings":"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","file":"UserFormControl.js","sourcesContent":["import React from \"react\"\nimport FieldMode from \"./FieldMode\";\n\nexport function withUserControl(Component)\n{\n    return class extends React.Component\n    {\n        state = {\n            control: {\n                horizontal: true,\n                labelColumnClass: \"col-md-3\",\n                wrapperColumnClass: \"col-md-9\",\n                mode: FieldMode.NORMAL,\n                currency: \"EUR\",\n                currencyAddonRight: true\n            },\n        };\n\n        changeControl = (name, value) => this.setState(\n            {\n                control: {\n                    ... this.state.control,\n                    [name] : value\n                }\n            }\n        );\n\n        render()\n        {\n            const { control } = this.state;\n\n            return (\n                <React.Fragment>\n                    <UserFormControl\n                        control={ control }\n                        changeControl={ this.changeControl }\n                    />\n                    <hr/>\n                    <Component\n                        control={ control }\n                        {... this.props}\n                    />\n                </React.Fragment>\n            )\n        }\n    }\n}\n\n\nclass UserFormControl extends React.Component {\n\n    render()\n    {\n        const { control, changeControl } = this.props;\n\n        return (\n            <div className=\"form-inline\">\n                <span className=\"text-info mr-sm-2\">\n                    CONTROL:\n                </span>\n                <label>\n                    mode\n                    <select\n                        className=\"form-control mr-sm-2\"\n                        value={ control.mode }\n                        onChange={ ev => changeControl(\"mode\", ev.target.value)}\n                    >\n                        <option>{ FieldMode.NORMAL }</option>\n                        <option>{ FieldMode.DISABLED }</option>\n                        <option>{ FieldMode.READ_ONLY }</option>\n                    </select>\n                </label>\n                <label>\n                    labelColumnClass\n                    <input\n                        type=\"text\"\n                        className=\"form-control mr-sm-2\"\n                        value={ control.labelColumnClass }\n                        onChange={ ev => changeControl(\"labelColumnClass\", ev.target.value)}\n                    >\n                    </input>\n                </label>\n                <label>\n                    wrapperColumnClass\n                    <input\n                        type=\"text\"\n                        className=\"form-control mr-sm-2\"\n                        value={ control.wrapperColumnClass }\n                        onChange={ ev => changeControl(\"wrapperColumnClass\", ev.target.value)}\n                    >\n                    </input>\n                </label>\n                <label>\n                    currency\n                    <input\n                        type=\"text\"\n                        className=\"form-control mr-sm-2\"\n                        value={ control.currency}\n                        onChange={ ev => changeControl(\"currency\", ev.target.value)}\n                    >\n                    </input>\n                </label>\n                <div className=\"form-check mr-sm-2\">\n                    <input className=\"form-check-input\" type=\"checkbox\" id=\"inlineFormCheck2\"\n                           checked={ control.currencyAddonRight }\n                           onChange={ ev => changeControl(\"currencyAddonRight\", !control.currencyAddonRight)}\n                    />\n                    <label className=\"form-check-label\" htmlFor=\"inlineFormCheck2\">\n                        currency right?\n                    </label>\n                </div>\n                <div className=\"form-check mr-sm-2\">\n                    <input className=\"form-check-input\" type=\"checkbox\" id=\"inlineFormCheck\"\n                           checked={ control.horizontal }\n                           onChange={ ev => changeControl(\"horizontal\", !control.horizontal)}\n                    />\n                    <label className=\"form-check-label\" htmlFor=\"inlineFormCheck\">\n                        horizontal\n                    </label>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default UserFormControl\n"]}