{"version":3,"sources":["../../src/util/enum.js"],"names":["Enum","map","name","hasOwnProperty","prototype","values","l","push","isValid","value","equals","a","b","Error","join"],"mappings":";;;;;AAAA;;;;;;;;;;AAUA,SAASA,IAAT,CAAcC,GAAd,EACA;AACI,QAAI,EAAE,gBAAgBD,IAAlB,CAAJ,EACA;AACI,eAAO,IAAIA,IAAJ,CAASC,GAAT,CAAP;AACH;;AAED,SAAK,IAAIC,IAAT,IAAiBD,GAAjB,EACA;AACI,YAAIA,IAAIE,cAAJ,CAAmBD,IAAnB,CAAJ,EACA;AACI,iBAAKA,IAAL,IAAaA,IAAb;AACH;AACJ;AACJ;;AAEDF,KAAKI,SAAL,CAAeC,MAAf,GAAwB,YACxB;AACI,QAAMC,IAAI,EAAV;AACA,SAAK,IAAIJ,IAAT,IAAiB,IAAjB,EACA;AACI,YAAI,KAAKC,cAAL,CAAoBD,IAApB,CAAJ,EACA;AACII,cAAEC,IAAF,CAAOL,IAAP;AACH;AACJ;AACD,WAAOI,CAAP;AACH,CAXD;;AAaAN,KAAKI,SAAL,CAAeI,OAAf,GAAyB,UAASC,KAAT,EACzB;AACI,WAAOA,SAAS,KAAKN,cAAL,CAAoBM,KAApB,CAAT,IAAuC,KAAKA,KAAL,MAAgBA,KAA9D;AACH,CAHD;;AAKAT,KAAKI,SAAL,CAAeM,MAAf,GAAwB,UAASC,CAAT,EAAYC,CAAZ,EACxB;AACI,QAAI,CAAC,KAAKJ,OAAL,CAAaG,CAAb,CAAL,EACA;AACI,cAAM,IAAIE,KAAJ,CAAWF,IAAI,gCAAJ,GAAuC,KAAKN,MAAL,GAAcS,IAAd,CAAmB,IAAnB,CAAlD,CAAN;AACH;;AAED,QAAI,CAAC,KAAKN,OAAL,CAAaI,CAAb,CAAL,EACA;AACI,cAAM,IAAIC,KAAJ,CAAWD,IAAI,gCAAJ,GAAuC,KAAKP,MAAL,GAAcS,IAAd,CAAmB,IAAnB,CAAlD,CAAN;AACH;;AAED,WAAOH,MAAMC,CAAb;AACH,CAbD;;kBAiBeZ,I","file":"enum.js","sourcesContent":["/**\n * Create a new Enum type based on the given map.\n *\n * The values in the map are irrelevant, they get replaced by the key as \n * per js enum pattern.\n *\n * @param map\n * @returns {Enum}\n * @constructor\n */\nfunction Enum(map)\n{\n    if (!(this instanceof Enum))\n    {\n        return new Enum(map);\n    }\n\n    for (let name in map)\n    {\n        if (map.hasOwnProperty(name))\n        {\n            this[name] = name;\n        }\n    }\n}\n\nEnum.prototype.values = function()\n{\n    const l = [];\n    for (let name in this)\n    {\n        if (this.hasOwnProperty(name))\n        {\n            l.push(name);\n        }\n    }\n    return l;\n};\n\nEnum.prototype.isValid = function(value)\n{\n    return value && this.hasOwnProperty(value) && this[value] === value;\n};\n\nEnum.prototype.equals = function(a, b)\n{\n    if (!this.isValid(a))\n    {\n        throw new Error( a + \" is not a valid enum value in \" + this.values().join(\", \"));\n    }\n\n    if (!this.isValid(b))\n    {\n        throw new Error( b + \" is not a valid enum value in \" + this.values().join(\", \"));\n    }\n\n    return a === b;\n};\n\n\n\nexport default Enum\n"]}