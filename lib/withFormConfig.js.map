{"version":3,"sources":["../src/withFormConfig.js"],"names":["Component","renderWithFormConfig","props","formConfig","React"],"mappings":";;;;;;;;;;kBAYe,UAASA,SAAT,EACf;AACI;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA,gMAaIC,oBAbJ,GAa2B;AAAA,uBACnB,8BAAC,SAAD,eACU,MAAKC,KADf;AAEI,gCAAaC;AAFjB,mBADmB;AAAA,aAb3B;AAAA;;AAAA;AAAA;AAAA,qCAGI;AACI,uBACI;AAAC,wCAAD,CAAY,QAAZ;AAAA;AAEQ,yBAAKF;AAFb,iBADJ;AAOH;AAXL;;AAAA;AAAA,MAAqBG,gBAAMJ,SAA3B;AAoBH,C;;AAlCD;;;;AAEA;;;;;;;;;;;;AAEA","file":"withFormConfig.js","sourcesContent":["import React from \"react\"\n\nimport FormConfig from \"./FormConfig\"\n\n/**\n * Convenience HOC that provides the current FormConfig as formConfig prop to the wrapper component, the advantage\n * over just using FormConfig.Provider being that the formConfig prop is also accessible in lifecycle methods and event\n * handlers.\n *\n * @param {ReactElement} Component\n * @return {function} Component that will automatically receive a \"formConfig\" prop\n */\nexport default function(Component)\n{\n    return class extends React.Component\n    {\n        render()\n        {\n            return (\n                <FormConfig.Consumer>\n                    {\n                        this.renderWithFormConfig\n                    }\n                </FormConfig.Consumer>\n            )\n        }\n\n        renderWithFormConfig = formConfig => (\n            <Component\n                { ... this.props }\n                formConfig={ formConfig }\n            />\n        )\n    }\n}\n"]}