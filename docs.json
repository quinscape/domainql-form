{"src/CustomGroup.js":{"description":"Custom form group to render arbitrary content encapsulated by a form group with label. If you need an actual\ncustom input, use Field in your own component. (see e.g. TextArea as an example of a custom field)","displayName":"CustomGroup","methods":[{"name":"renderWithFieldContext","docblock":null,"modifiers":[],"params":[{"name":"fieldContext","type":null}],"returns":null}],"props":{"label":{"type":{"name":"string"},"required":true,"description":""},"children":{"type":{"name":"func"},"required":true,"description":""},"id":{"type":{"name":"string"},"required":false,"description":""},"labelClass":{"type":{"name":"string"},"required":false,"description":""},"rows":{"defaultValue":{"value":"5","computed":false},"required":false},"columns":{"defaultValue":{"value":"60","computed":false},"required":false}}},"src/Field.js":{"description":"","displayName":"Field","methods":[{"name":"renderWithFormConfig","docblock":null,"modifiers":[],"params":[{"name":"formConfig","type":null}],"returns":null}],"props":{"name":{"type":{"name":"string"},"required":true,"description":""},"mode":{"type":{"name":"enum","computed":true,"value":"FieldMode.values()"},"required":false,"description":""},"helpText":{"type":{"name":"string"},"required":false,"description":""},"title":{"type":{"name":"string"},"required":false,"description":""},"label":{"type":{"name":"string"},"required":false,"description":""},"placeholder":{"type":{"name":"string"},"required":false,"description":""},"inputClass":{"type":{"name":"string"},"required":false,"description":""},"labelClass":{"type":{"name":"string"},"required":false,"description":""}}},"src/FormBlock.js":{"description":"","displayName":"FormBlock","methods":[{"name":"getDerivedStateFromProps","docblock":null,"modifiers":["static"],"params":[{"name":"nextProps","type":null},{"name":"prevState","type":null}],"returns":null}],"props":{"className":{"type":{"name":"string"},"required":false,"description":""},"basePath":{"type":{"name":"string"},"required":false,"description":""},"style":{"type":{"name":"object"},"required":false,"description":""}},"composes":["./FormConfig"]},"src/FormConfigProvider.js":{"description":"","displayName":"FormConfigProvider","methods":[{"name":"getDerivedStateFromProps","docblock":null,"modifiers":["static"],"params":[{"name":"nextProps","type":null},{"name":"prevState","type":null}],"returns":null}],"props":{"schema":{"type":{"name":"union","value":[{"name":"instanceOf","value":"InputSchema"},{"name":"object"}]},"required":false,"description":""}},"composes":["./FormConfig"]},"src/FormGroup.js":{"description":"Renders a .form-group wrapper from our standard render context. Is used by internally the default field renderers\nand can be used for implementing custom fields.\n\nIf you just need a bootstrap form group with arbitrary content, use CustomGroup.\n\n@param props\n@returns {*}\n@constructor","displayName":"FormGroup","methods":[],"props":{"formGroupClass":{"defaultValue":{"value":"\"form-group\"","computed":false},"required":false}}},"src/Form.js":{"description":"","displayName":"Form","methods":[{"name":"onSubmit","docblock":null,"modifiers":[],"params":[{"name":"values","type":null},{"name":"actions","type":null}],"returns":null},{"name":"validate","docblock":null,"modifiers":[],"params":[{"name":"values","type":null}],"returns":null}],"props":{"onSubmit":{"type":{"name":"func"},"required":true,"description":"Submit handler handling the final typed GraphQL result"},"schema":{"type":{"name":"union","value":[{"name":"instanceOf","value":"InputSchema"},{"name":"object"}]},"required":false,"description":"schema to use for this form"},"type":{"type":{"name":"string"},"required":true,"description":"form base type"},"value":{"type":{"name":"any"},"required":true,"description":"initial value (typed GraphQL object)"},"isInitialValid":{"type":{"name":"bool"},"required":false,"description":"true if the initial value is valid","defaultValue":{"value":"true","computed":false}},"initialValues":{"type":{"name":"func"},"required":false,"description":"Optional function to provide the initialValues for Formik without converting them from the typed GraphQL object.\nMight also be invalid (See isInitialValid)"},"validate":{"type":{"name":"func"},"required":false,"description":"Optional validate function. Note that the values object received here is *not* typed, i.e. it contains the\nraw formik string/boolean values. If you need all values to be converted to a typed GraphQL object, you\nneed to invoke InputSchema.fromValues(type, values) manually on the received values object."}}},"src/FormList.js":{"description":"","displayName":"FormList","methods":[],"props":{"name":{"type":{"name":"string"},"required":true,"description":"Name/path of the list field for this <FormSelector/>"},"canRemove":{"type":{"name":"bool"},"required":false,"description":"If true (the default), the user can remove objects as long as there are more than \"minObjects\" objects. If false\nthe user can never remove objects.","defaultValue":{"value":"true","computed":false}},"canSort":{"type":{"name":"bool"},"required":false,"description":"If true (the default), the user can sort the list of objects with up and down buttons for each object.","defaultValue":{"value":"true","computed":false}},"addLabel":{"type":{"name":"string"},"required":false,"description":"Label to put on the add button (default is \"Add\")","defaultValue":{"value":"\"Add Object\"","computed":false}},"removeCheck":{"type":{"name":"string"},"required":false,"description":"Text of the remove object confirmation (default is \"Remove Object?\")","defaultValue":{"value":"\"Delete Row?\"","computed":false}},"minObjects":{"type":{"name":"number"},"required":false,"description":"Mininum number of objects in the list. (default is 0)","defaultValue":{"value":"0","computed":false}},"newObject":{"type":{"name":"func"},"required":false,"description":"optional factory method to produce new values. If no newObject prop is given, the user cannot add objects\nto the list."},"renderToolbar":{"type":{"name":"func"},"required":false,"description":"render additional elements into the list toolbar"},"renderRowToolbar":{"type":{"name":"func"},"required":false,"description":"render additional elements into the per row toolbars"},"emptyText":{"defaultValue":{"value":"\"No Rows\"","computed":false},"required":false},"horizontal":{"defaultValue":{"value":"true","computed":false},"required":false}},"composes":["./FormConfig"]},"src/FormSelector.js":{"description":"Selects one object from a list of objects","displayName":"FormSelector","methods":[{"name":"selectRow","docblock":null,"modifiers":[],"params":[{"name":"index","type":null}],"returns":null}],"props":{"name":{"type":{"name":"string"},"required":true,"description":"Name/path of the list field for this <FormSelector/>"},"canRemove":{"type":{"name":"bool"},"required":false,"description":"If true (the default), the user can remove objects as long as there are more than \"minObjects\" objects. If false\nthe user can never remove objects.","defaultValue":{"value":"true","computed":false}},"canSort":{"type":{"name":"bool"},"required":false,"description":"If true (the default), the user can sort the list of objects with up and down buttons for each object.","defaultValue":{"value":"true","computed":false}},"addLabel":{"type":{"name":"string"},"required":false,"description":"Label to put on the add button (default is \"Add\")","defaultValue":{"value":"\"Add\"","computed":false}},"removeCheck":{"type":{"name":"string"},"required":false,"description":"Text of the remove object confirmation (default is \"Remove Object?\")","defaultValue":{"value":"\"Remove Object?\"","computed":false}},"minObjects":{"type":{"name":"number"},"required":false,"description":"Mininum number of objects in the list. (default is 0)","defaultValue":{"value":"0","computed":false}},"selector":{"type":{"name":"union","value":[{"name":"string"},{"name":"func"}]},"required":true,"description":"Field to select one object from the list of objects by. Can also be a function that renders a representation\nof a given object."},"newObject":{"type":{"name":"func"},"required":false,"description":"optional factory method to produce new values. If no newObject prop is given, the user cannot add objects\nto the list."},"renderToolbar":{"type":{"name":"func"},"required":false,"description":"render additional elements into the list toolbar"},"renderRowToolbar":{"type":{"name":"func"},"required":false,"description":"render additional elements into the per row toolbars"},"emptyText":{"defaultValue":{"value":"\"No Rows\"","computed":false},"required":false},"horizontal":{"defaultValue":{"value":"true","computed":false},"required":false}},"composes":["./FormConfig"]},"src/Select.js":{"description":"Allows selection from a list of string values for a target field.","displayName":"Select","methods":[{"name":"handleChange","docblock":null,"modifiers":[],"params":[{"name":"fieldContext","type":null},{"name":"ev","type":null}],"returns":null},{"name":"renderWithFieldContext","docblock":null,"modifiers":[],"params":[{"name":"fieldContext","type":null}],"returns":null}],"props":{"name":{"type":{"name":"string"},"required":true,"description":""},"values":{"type":{"name":"array"},"required":true,"description":""},"mode":{"type":{"name":"enum","computed":true,"value":"FieldMode.values()"},"required":false,"description":""},"onChange":{"type":{"name":"func"},"required":false,"description":""},"required":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}},"helpText":{"type":{"name":"string"},"required":false,"description":""},"title":{"type":{"name":"string"},"required":false,"description":""},"label":{"type":{"name":"string"},"required":false,"description":""},"inputClass":{"type":{"name":"string"},"required":false,"description":""},"labelClass":{"type":{"name":"string"},"required":false,"description":""}}},"src/StaticText.js":{"description":"Helper to render a static value without form or form field.","displayName":"StaticText","methods":[{"name":"renderWithFormContext","docblock":null,"modifiers":[],"params":[{"name":"formConfig","type":null}],"returns":null}],"props":{"type":{"type":{"name":"string"},"required":true,"description":""},"value":{"type":{"name":"any"},"required":false,"description":""},"name":{"type":{"name":"union","value":[{"name":"string"},{"name":"array"}]},"required":false,"description":""}}},"src/TextArea.js":{"description":"Edits a string GraphQL field with a text area element.\n\nThis is a good example how to implement custom fields.","displayName":"TextArea","methods":[{"name":"renderWithFieldContext","docblock":null,"modifiers":[],"params":[{"name":"fieldContext","type":null}],"returns":null}],"props":{"name":{"type":{"name":"string"},"required":true,"description":""},"mode":{"type":{"name":"enum","computed":true,"value":"FieldMode.values()"},"required":false,"description":""},"helpText":{"type":{"name":"string"},"required":false,"description":""},"title":{"type":{"name":"string"},"required":false,"description":""},"label":{"type":{"name":"string"},"required":false,"description":""},"rows":{"type":{"name":"number"},"required":false,"description":"","defaultValue":{"value":"3","computed":false}},"cols":{"type":{"name":"number"},"required":false,"description":"","defaultValue":{"value":"60","computed":false}},"placeholder":{"type":{"name":"string"},"required":false,"description":""},"inputClass":{"type":{"name":"string"},"required":false,"description":""},"labelClass":{"type":{"name":"string"},"required":false,"description":""}}},"src/UserFormControl.js":{"description":"","displayName":"UserFormControl","methods":[]}}